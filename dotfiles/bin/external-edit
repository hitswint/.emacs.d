#!/bin/bash

while getopts "se:" arg         #选项后面的冒号表示该选项需要参数
do
    case $arg in
        s)
            sel=1
            ;;
        e)
            editor=$OPTARG      #参数存在$OPTARG中
            ;;
        ?)                      #当有不认识的选项的时候arg为?
        echo "Usage: external-edit [-s] [-e editor]"
        echo "-s select"
        echo "-e editor"
        exit 1
        ;;
    esac
done

xte_selectall()
{
    case $xwin_title in
        *emacs@* | *Microsoft\ Word* )
            xte <<EOF
sleep 1
keydown Control_L
key x
keyup Control_L
key h
EOF
            ;;
        *)
            xte <<EOF
sleep 1
keydown Control_L
key a
keyup Control_L
EOF
            ;;
    esac
}

xwin_id=`xdpyinfo | sed -ne 's/^focus:.*\(0x[^,]\+\).*/\1/p'`
if xwininfo -id $xwin_id | grep "(has no name)"
then
    xwin_id=`printf "0x%x\n" $(( $xwin_id - 1 ))` #Decrement by one.
fi
xwin_title=`xwininfo -id $xwin_id | sed -ne 's/xwininfo: .*"\([^"]\+\)"/\1/p'`

if [ $sel ]; then
    xte_selectall
fi

Wind_id=`xdotool getactivewindow`;
sleep 0.5

if [ $(xdotool search --onlyvisible --class "URxvt" | grep -i $Wind_id) ]; then
    word=$(xclip -selection primary -o | sed 's/[\"]/\\&/g')
else
    xdotool keyup ctrl+c
    xdotool key --clearmodifiers ctrl+c
    word=$(xclip -selection clipboard -o | sed 's/[\"]/\\&/g')
fi

# run-or-raise.sh emacs

ELISP=$( cat $HOME/bin/emacs_anywhere.el )

$editor -a '' -c -F "((name . \"ec_float\")(top . -1))" -e "(progn $ELISP (insert \"$word\"))"

. /tmp/eaenv

if [ "$EA_ABORT" = true ]; then
    exit 0;
fi

wmctrl -ia $xwin_id

Emacs_style='^.*(emacs@|Microsoft Word).*$'

if [[ $xwin_title =~ $Emacs_style  ]];then
    xdotool keyup ctrl+y
    xdotool key --clearmodifiers ctrl+y
else
    xdotool keyup ctrl+v
    xdotool key --clearmodifiers ctrl+v
fi
